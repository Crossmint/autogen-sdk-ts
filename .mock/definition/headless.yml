imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create-order:
      path: /2022-06-09/orders
      method: POST
      auth: true
      docs: Creates a new order that can be used to complete a headless checkout.
      display-name: Create Order
      request:
        name: CreateOrderRequest
        body:
          properties:
            recipient: optional<root.Recipient>
            locale: optional<root.Locale>
            payment: root.Payment
            lineItems: root.LineItems
      response:
        docs: Order successfully created.
        type: root.CreateOrderResponse
      errors:
        - root.BadRequestError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ServiceUnavailableError
      examples:
        - request:
            payment:
              method: arbitrum-sepolia
              currency: eth
            lineItems:
              collectionLocator: crossmint:<collectionId>
          response:
            body:
              clientSecret: _removed_
              order:
                orderId: b2959ca5-65e4-466a-bd26-1bd05cb4f837
                phase: payment
                locale: en-US
                lineItems:
                  - chain: polygon-amoy
                    quantity: 1
                quote:
                  status: valid
                  quotedAt: '2024-06-07T16:55:44.653Z'
                  expiresAt: '2024-06-07T17:55:44.653Z'
                  totalPrice:
                    amount: '0.0001375741'
                    currency: eth
                payment:
                  status: awaiting-payment
                  method: base-sepolia
                  currency: eth
                  preparation:
                    chain: base-sepolia
                    payerAddress: 0x1234abcd...
                    serializedTransaction: 0x02f90.....
    get-order:
      path: /2022-06-09/orders/{orderId}
      method: GET
      auth: true
      docs: Get specific order by ID
      path-parameters:
        orderId:
          type: string
          docs: |
            This is the identifier for the order with UUID format.

            **Example:** `9c82ef99-617f-497d-9abb-fd355291681b`
      display-name: Get Order
      response:
        docs: Order successfully created.
        type: root.OrderObject
      errors:
        - root.BadRequestError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ServiceUnavailableError
      examples:
        - path-parameters:
            orderId: orderId
          response:
            body:
              orderId: b2959ca5-65e4-466a-bd26-1bd05cb4f837
              phase: payment
              locale: en-US
              lineItems:
                - chain: polygon-amoy
                  quantity: 1
                  callData:
                    quantity: 1
                    ADDITIONAL_PROPERTIES: Your other mint function arguments
                  metadata:
                    name: Headless Checkout Demo
                    description: NFT Description
                    imageUrl: https://cdn.io/image.png
                  quote:
                    status: valid
                  delivery:
                    status: awaiting-payment
              quote:
                status: valid
                quotedAt: '2024-06-07T16:55:44.653Z'
                expiresAt: '2024-06-07T17:55:44.653Z'
                totalPrice:
                  amount: '0.0001375741'
                  currency: eth
              payment:
                status: awaiting-payment
                method: base-sepolia
                currency: eth
                preparation:
                  chain: base-sepolia
                  payerAddress: 0x1234abcd...
                  serializedTransaction: 0x02f90.....
    edit-order:
      path: /2022-06-09/orders/{orderId}
      method: PATCH
      auth: true
      docs: >-
        Edit an existing order. You can update the recipient, the payment
        method, and/or the locale.
      path-parameters:
        orderId:
          type: string
          docs: |
            This is the identifier for the order with UUID format.

            **Example:** `9c82ef99-617f-497d-9abb-fd355291681b`
      display-name: Edit Order
      request:
        name: OrderDto
        body:
          properties:
            recipient: optional<root.Recipient>
            locale: optional<root.Locale>
            payment: optional<root.Payment>
      response:
        docs: Order successfully created.
        type: root.OrderObject
      errors:
        - root.BadRequestError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ServiceUnavailableError
      examples:
        - path-parameters:
            orderId: orderId
          request: {}
          response:
            body:
              orderId: b2959ca5-65e4-466a-bd26-1bd05cb4f837
              phase: payment
              locale: en-US
              lineItems:
                - chain: polygon-amoy
                  quantity: 1
                  callData:
                    quantity: 1
                    ADDITIONAL_PROPERTIES: Your other mint function arguments
                  metadata:
                    name: Headless Checkout Demo
                    description: NFT Description
                    imageUrl: https://cdn.io/image.png
                  quote:
                    status: valid
                  delivery:
                    status: awaiting-payment
              quote:
                status: valid
                quotedAt: '2024-06-07T16:55:44.653Z'
                expiresAt: '2024-06-07T17:55:44.653Z'
                totalPrice:
                  amount: '0.0001375741'
                  currency: eth
              payment:
                status: awaiting-payment
                method: base-sepolia
                currency: eth
                preparation:
                  chain: base-sepolia
                  payerAddress: 0x1234abcd...
                  serializedTransaction: 0x02f90.....

/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Crossmint from "../../api/index";
import * as core from "../../core";
import { CreateCollectionBodyChain } from "./CreateCollectionBodyChain";
import { CreateCollectionBodyMetadata } from "./CreateCollectionBodyMetadata";
import { CreateCollectionBodyFungibility } from "./CreateCollectionBodyFungibility";
import { PaymentsObject } from "./PaymentsObject";
import { ReuploadLinkedFiles } from "./ReuploadLinkedFiles";

export const CreateCollectionBody: core.serialization.ObjectSchema<
    serializers.CreateCollectionBody.Raw,
    Crossmint.CreateCollectionBody
> = core.serialization.object({
    chain: CreateCollectionBodyChain,
    metadata: CreateCollectionBodyMetadata,
    fungibility: CreateCollectionBodyFungibility.optional(),
    supplyLimit: core.serialization.number().optional(),
    payments: PaymentsObject.optional(),
    reuploadLinkedFiles: ReuploadLinkedFiles.optional(),
});

export declare namespace CreateCollectionBody {
    interface Raw {
        chain: CreateCollectionBodyChain.Raw;
        metadata: CreateCollectionBodyMetadata.Raw;
        fungibility?: CreateCollectionBodyFungibility.Raw | null;
        supplyLimit?: number | null;
        payments?: PaymentsObject.Raw | null;
        reuploadLinkedFiles?: ReuploadLinkedFiles.Raw | null;
    }
}
